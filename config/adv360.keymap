/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp PRINTSCREEN  &mt LS(N1) NUMBER_1  &mt LS(N2) NUMBER_2          &mt LS(N3) NUMBER_3                &mt LS(N4) NUMBER_4                  &mt LS(N5) N5  &tog 1                                                                     &mo 3          &mt RS(N6) NUMBER_6  &mt RS(N7) N7  &mt RS(N8) N8        &mt RS(N9) N9    &mt RS(N0) N0      &mt RS(EQUAL) EQUAL
&kp TAB          &kp Q                &mt LC(W) W                  &kp F                              &mt LC(P) P                          &kp B          &kp HOME                                                                   &kp PAGE_UP    &kp J                &kp L          &kp U                &mt RC(Y) Y      &mt RS(SEMI) SEMI  &mt RS(MINUS) MINUS
&kp CAPS         &mt LC(A) A          &kp R                        &mt LC(S) S                        &kp T                                &kp G          &kp END        &kp LCTRL  &kp LALT                &kp LEFT_GUI  &kp RCTRL  &kp PAGE_DOWN  &kp M                &kp N          &kp E                &kp I            &mt RC(O) O        &mt RS(SQT) SQT
&kp LEFT_SHIFT   &mt LC(Z) Z          &mt LC(X) X                  &mt LC(C) C                        &kp D                                &mt LC(V) V                              &kp K_CONTEXT_MENU      &kp INS                                 &kp K                &kp H          &mt RS(COMMA) COMMA  &mt RS(DOT) DOT  &mt RS(FSLH) FSLH  &kp RIGHT_SHIFT
&mo 2            &mt LS(GRAVE) GRAVE  &mt LS(BACKSLASH) BACKSLASH  &mt LS(LEFT_BRACKET) LEFT_BRACKET  &mt LS(RIGHT_BRACKET) RIGHT_BRACKET                 &kp BACKSPACE  &kp SPACE  &kp ESC                 &tog 2        &kp ENTER  &kp DELETE                          &kp LEFT       &kp UP               &kp DOWN         &kp RIGHT          &mo 2
            >;
        };

        layer_keypad {
            bindings = <
&trans         &kp LPAR   &kp RPAR       &kp LBKT       &kp RBKT       &none      &trans                                      &none   &none      &kp LBKT       &kp RBKT       &kp LPAR       &kp RPAR   &none
&kp LBRC       &kp RBRC   &mt LS(N9) N9  &mt LS(N8) N8  &mt LS(N7) N7  &kp EQUAL  &none                                       &none   &kp EQUAL  &mt RS(N7) N7  &mt RS(N8) N8  &mt RS(N9) N9  &kp LBRC   &kp RBRC
&kp ASTRK      &kp PLUS   &mt LS(N6) N6  &mt LS(N5) N5  &mt LS(N4) N4  &kp N0     &none   &trans  &trans      &trans  &trans  &none   &kp N0     &mt RS(N4) N4  &mt RS(N5) N5  &mt RS(N6) N6  &kp PLUS   &kp ASTRK
&kp BACKSLASH  &kp MINUS  &mt LS(N3) N3  &mt LS(N2) N2  &mt LS(N1) N1  &kp DOT                    &trans      &trans                  &kp DOT    &mt RS(N1) N1  &mt RS(N2) N2  &mt RS(N3) N3  &kp MINUS  &kp BACKSLASH
&mo 2          &kp LEFT   &kp DOWN       &kp UP_ARROW   &kp RIGHT                 &trans  &trans  &trans      &trans  &trans  &trans             &kp LEFT       &kp UP         &kp DOWN       &kp RIGHT  &mo 2
            >;
        };

        layer_fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &tog 1                                      &mo 3   &kp F7  &kp F8  &kp F9           &kp F10            &kp F11     &kp F12
&trans  &trans  &trans  &trans  &trans  &trans  &none                                       &none   &trans  &trans  &trans           &trans             &trans      &trans
&trans  &trans  &trans  &trans  &trans  &trans  &none   &trans  &trans      &trans  &trans  &none   &trans  &trans  &trans           &trans             &trans      &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans           &trans             &trans      &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &none   &kp C_VOLUME_UP  &kp C_VOLUME_DOWN  &kp C_MUTE  &trans
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };
    };
};
